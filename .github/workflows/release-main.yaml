name: release and deploy

on:
  pull_request:
    branches:
      - main
    types:
      - closed

concurrency:
  group: ${{ github.workflow }}--${{ github.ref }}
  cancel-in-progress: false

jobs:
  release-please:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      id-token: write
      pull-requests: write
      contents: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      release_name: "v${{ steps.release.outputs.major }}-${{ steps.release.outputs.minor }}-${{ steps.release.outputs.patch }}"
      sha: ${{ steps.release.outputs.sha }}
    steps:
      - name: Generate token for release-please
        id: gh_pr_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.THIS_GITHUB_APP_ID }}
          private_key: ${{ secrets.THIS_GITHUB_APP_PRIVATE_KEY }}
          permissions: >-
            {"issues": "write", "pull_requests": "write", "contents": "write"}
          repositories: >-
            ["${{ github.event.repository.name }}"]

      - uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4.2.0
        id: release
        with:
          token: ${{ steps.gh_pr_token.outputs.token }}
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/.manifest.json
          target-branch: main

  python-test:
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/wc-python-test.yaml

  rust-test:
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/wc-rust-test.yaml

  build:
    needs: [release-please, python-test, rust-test]
    if: needs.release-please.outputs.release_created && github.event.pull_request.merged == true
    name: build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2


      - name: Cache Rust
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          workspaces: |
            fauxgen-core -> fauxgen-core-target-${{ matrix.os }}

      - name: Install uv
        uses: astral-sh/setup-uv@22695119d769bdb6f7032ad67b9bca0ef8c4a174 # v5.4.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheel
        run: uv build

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dist-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/

  release-main:
    needs: [release-please, python-test, rust-test, build]
    if: needs.release-please.outputs.release_created && github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      id-token: write
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      - name: Install uv
        uses: astral-sh/setup-uv@22695119d769bdb6f7032ad67b9bca0ef8c4a174 # v5.4.0


      - name: List distribution files
        run: ls -l dist/

      - name: Check distribution files
        run: uvx twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: uvx twine upload dist/*
